services:
  api:
    build:
      context: ./api
      dockerfile: dockerfile
    user: node
    expose:
      - "5000"
    volumes:
      - ./app_data:/app/dist/app_data
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - SECRET=${SECRET}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      db:
        condition: service_healthy
        restart: true

  client:
    build:
      context: ./client
      dockerfile: dockerfile
      args:
        VITE_API_URL: ${API_URL}
    expose:
      - "3000"
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - api

  db:
    image: postgres
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    volumes:
      - prod_pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: showcase
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d showcase
      interval: 10s
      timeout: 3s
      retries: 3

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080

  proxy:
    image: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 5000:5000
    volumes:
      - ./certs:/certs
    build:
      context: ./proxy
      dockerfile: dockerfile
    depends_on:
      - api
      - client

volumes:
  prod_pgdata:
