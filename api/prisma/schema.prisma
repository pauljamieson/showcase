// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  email        String   @unique
  displayname  String   @unique
  password     String
  role         Role     @default(USER)
  tags         Tag[]
  people       Person[]
}

enum Role {
  ADMIN
  USER
}

model IncomingFile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  filename  String
}

model VideoFile {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  filename   String
  size       BigInt
  duration   Int
  height     Int
  width      Int
  videoCodec String
  audioCodec String
  views      Int      @default(0)
  rating     Int      @default(0)
  tags       Tag[]
  people     Person[]

  @@unique([filename, size])
}

model Tag {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  videoFiles VideoFile[]
  userId     Int
  creator    User        @relation(fields: [userId], references: [id])
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Person {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  videoFiles VideoFile[]
  userId     Int
  creator    User        @relation(fields: [userId], references: [id])
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}
